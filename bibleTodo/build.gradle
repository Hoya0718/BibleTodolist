plugins {
   id 'java'
   id 'org.springframework.boot' version '3.2.3'
   id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.bible'
version = '0.0.1-SNAPSHOT'

java {
   toolchain {
       languageVersion.set(JavaLanguageVersion.of(17))
   }
}

repositories {
   mavenCentral()
}

dependencies {
   implementation 'org.springframework.boot:spring-boot-starter-web'
   implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
   implementation 'org.springframework.boot:spring-boot-starter-security'
   implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
   implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
   implementation 'org.springframework.boot:spring-boot-starter-validation'
   implementation 'org.jsoup:jsoup:1.15.3'

   runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

   compileOnly 'org.projectlombok:lombok'
   annotationProcessor 'org.projectlombok:lombok'

   developmentOnly 'org.springframework.boot:spring-boot-devtools'

   testImplementation 'org.springframework.boot:spring-boot-starter-test'  
   testImplementation 'org.springframework.security:spring-security-test'
}

/*
def webappDir = "../../BibleTodolistC/bibletodolist"

task buildReact(type: Exec) {
   dependsOn "installReact"
   workingDir "$webappDir"
   inputs.dir "$webappDir"
   group = BasePlugin.BUILD_GROUP
   
   if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
       commandLine "npm.cmd", "run-script", "build"
   } else {
       commandLine "npm", "run-script", "build"
   }
}

task installReact(type: Exec) {
   workingDir "$webappDir"
   inputs.dir "$webappDir"
   group = BasePlugin.BUILD_GROUP
   
   if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
       commandLine "npm.cmd", "install"
   } else {
       commandLine "npm", "install"
   }
}

task copyReactBuild(type: Copy) {
    dependsOn "buildReact"
    from("$webappDir/build")
    into "$projectDir/src/main/resources"
}

processResources {
   dependsOn "copyReactBuild"
}
*/
tasks.named('test') {
   useJUnitPlatform()
}

bootJar {
   archiveFileName = 'bible-todo-0.0.1-SNAPSHOT.jar'
   manifest {
       attributes(
           'Implementation-Title': project.name,
           'Implementation-Version': project.version,
           'Start-Class': 'com.bible.todo.BibleTodoApplication'
       )
   }
}